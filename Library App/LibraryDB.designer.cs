#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library_App
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Library")]
	public partial class LibraryDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_AdminDetail(tbl_AdminDetail instance);
    partial void Updatetbl_AdminDetail(tbl_AdminDetail instance);
    partial void Deletetbl_AdminDetail(tbl_AdminDetail instance);
    partial void Inserttbl_User(tbl_User instance);
    partial void Updatetbl_User(tbl_User instance);
    partial void Deletetbl_User(tbl_User instance);
    partial void Inserttbl_Author(tbl_Author instance);
    partial void Updatetbl_Author(tbl_Author instance);
    partial void Deletetbl_Author(tbl_Author instance);
    partial void Inserttbl_Book(tbl_Book instance);
    partial void Updatetbl_Book(tbl_Book instance);
    partial void Deletetbl_Book(tbl_Book instance);
    partial void Inserttbl_Borrow(tbl_Borrow instance);
    partial void Updatetbl_Borrow(tbl_Borrow instance);
    partial void Deletetbl_Borrow(tbl_Borrow instance);
    partial void Inserttbl_Edition(tbl_Edition instance);
    partial void Updatetbl_Edition(tbl_Edition instance);
    partial void Deletetbl_Edition(tbl_Edition instance);
    partial void Inserttbl_Publisher(tbl_Publisher instance);
    partial void Updatetbl_Publisher(tbl_Publisher instance);
    partial void Deletetbl_Publisher(tbl_Publisher instance);
    partial void Inserttbl_Student(tbl_Student instance);
    partial void Updatetbl_Student(tbl_Student instance);
    partial void Deletetbl_Student(tbl_Student instance);
    #endregion
		
		public LibraryDBDataContext() : 
				base(global::Library_App.Properties.Settings.Default.LibraryConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_AdminDetail> tbl_AdminDetails
		{
			get
			{
				return this.GetTable<tbl_AdminDetail>();
			}
		}
		
		public System.Data.Linq.Table<tbl_User> tbl_Users
		{
			get
			{
				return this.GetTable<tbl_User>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Author> tbl_Authors
		{
			get
			{
				return this.GetTable<tbl_Author>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Book> tbl_Books
		{
			get
			{
				return this.GetTable<tbl_Book>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Borrow> tbl_Borrows
		{
			get
			{
				return this.GetTable<tbl_Borrow>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Edition> tbl_Editions
		{
			get
			{
				return this.GetTable<tbl_Edition>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Publisher> tbl_Publishers
		{
			get
			{
				return this.GetTable<tbl_Publisher>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Student> tbl_Students
		{
			get
			{
				return this.GetTable<tbl_Student>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_AdminDetails")]
	public partial class tbl_AdminDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private double _Salary;
		
		private System.Nullable<System.DateTime> _HireDate;
		
		private int _Shift;
		
		private EntityRef<tbl_User> _tbl_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSalaryChanging(double value);
    partial void OnSalaryChanged();
    partial void OnHireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHireDateChanged();
    partial void OnShiftChanging(int value);
    partial void OnShiftChanged();
    #endregion
		
		public tbl_AdminDetail()
		{
			this._tbl_User = default(EntityRef<tbl_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tbl_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Float NOT NULL")]
		public double Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HireDate
		{
			get
			{
				return this._HireDate;
			}
			set
			{
				if ((this._HireDate != value))
				{
					this.OnHireDateChanging(value);
					this.SendPropertyChanging();
					this._HireDate = value;
					this.SendPropertyChanged("HireDate");
					this.OnHireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shift", DbType="Int NOT NULL")]
		public int Shift
		{
			get
			{
				return this._Shift;
			}
			set
			{
				if ((this._Shift != value))
				{
					this.OnShiftChanging(value);
					this.SendPropertyChanging();
					this._Shift = value;
					this.SendPropertyChanged("Shift");
					this.OnShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_AdminDetail", Storage="_tbl_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_User tbl_User
		{
			get
			{
				return this._tbl_User.Entity;
			}
			set
			{
				tbl_User previousValue = this._tbl_User.Entity;
				if (((previousValue != value) 
							|| (this._tbl_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_User.Entity = null;
						previousValue.tbl_AdminDetail = null;
					}
					this._tbl_User.Entity = value;
					if ((value != null))
					{
						value.tbl_AdminDetail = this;
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("tbl_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_User")]
	public partial class tbl_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private string _FName;
		
		private string _SName;
		
		private System.DateTime _Birthdate;
		
		private string _Address;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _NationalID;
		
		private string _RoleName;
		
		private EntityRef<tbl_AdminDetail> _tbl_AdminDetail;
		
		private EntitySet<tbl_Borrow> _tbl_Borrows;
		
		private EntityRef<tbl_Student> _tbl_Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnSNameChanging(string value);
    partial void OnSNameChanged();
    partial void OnBirthdateChanging(System.DateTime value);
    partial void OnBirthdateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnNationalIDChanging(string value);
    partial void OnNationalIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public tbl_User()
		{
			this._tbl_AdminDetail = default(EntityRef<tbl_AdminDetail>);
			this._tbl_Borrows = new EntitySet<tbl_Borrow>(new Action<tbl_Borrow>(this.attach_tbl_Borrows), new Action<tbl_Borrow>(this.detach_tbl_Borrows));
			this._tbl_Student = default(EntityRef<tbl_Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string SName
		{
			get
			{
				return this._SName;
			}
			set
			{
				if ((this._SName != value))
				{
					this.OnSNameChanging(value);
					this.SendPropertyChanging();
					this._SName = value;
					this.SendPropertyChanged("SName");
					this.OnSNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="DateTime NOT NULL")]
		public System.DateTime Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="VarChar(30)")]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_AdminDetail", Storage="_tbl_AdminDetail", ThisKey="ID", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public tbl_AdminDetail tbl_AdminDetail
		{
			get
			{
				return this._tbl_AdminDetail.Entity;
			}
			set
			{
				tbl_AdminDetail previousValue = this._tbl_AdminDetail.Entity;
				if (((previousValue != value) 
							|| (this._tbl_AdminDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_AdminDetail.Entity = null;
						previousValue.tbl_User = null;
					}
					this._tbl_AdminDetail.Entity = value;
					if ((value != null))
					{
						value.tbl_User = this;
					}
					this.SendPropertyChanged("tbl_AdminDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Borrow", Storage="_tbl_Borrows", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<tbl_Borrow> tbl_Borrows
		{
			get
			{
				return this._tbl_Borrows;
			}
			set
			{
				this._tbl_Borrows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Student", Storage="_tbl_Student", ThisKey="ID", OtherKey="User_ID", IsUnique=true, IsForeignKey=false)]
		public tbl_Student tbl_Student
		{
			get
			{
				return this._tbl_Student.Entity;
			}
			set
			{
				tbl_Student previousValue = this._tbl_Student.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Student.Entity = null;
						previousValue.tbl_User = null;
					}
					this._tbl_Student.Entity = value;
					if ((value != null))
					{
						value.tbl_User = this;
					}
					this.SendPropertyChanged("tbl_Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Borrows(tbl_Borrow entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = this;
		}
		
		private void detach_tbl_Borrows(tbl_Borrow entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Author")]
	public partial class tbl_Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Birthdate;
		
		private string _Address;
		
		private EntitySet<tbl_Book> _tbl_Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public tbl_Author()
		{
			this._tbl_Books = new EntitySet<tbl_Book>(new Action<tbl_Book>(this.attach_tbl_Books), new Action<tbl_Book>(this.detach_tbl_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(45)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Author_tbl_Book", Storage="_tbl_Books", ThisKey="ID", OtherKey="AuthorID")]
		public EntitySet<tbl_Book> tbl_Books
		{
			get
			{
				return this._tbl_Books;
			}
			set
			{
				this._tbl_Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Books(tbl_Book entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Author = this;
		}
		
		private void detach_tbl_Books(tbl_Book entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Book")]
	public partial class tbl_Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ISBN;
		
		private int _PublisherID;
		
		private int _AuthorID;
		
		private string _Name;
		
		private string _Genre;
		
		private short _Copies;
		
		private EntitySet<tbl_Borrow> _tbl_Borrows;
		
		private EntitySet<tbl_Edition> _tbl_Editions;
		
		private EntityRef<tbl_Author> _tbl_Author;
		
		private EntityRef<tbl_Publisher> _tbl_Publisher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnISBNChanging(int value);
    partial void OnISBNChanged();
    partial void OnPublisherIDChanging(int value);
    partial void OnPublisherIDChanged();
    partial void OnAuthorIDChanging(int value);
    partial void OnAuthorIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGenreChanging(string value);
    partial void OnGenreChanged();
    partial void OnCopiesChanging(short value);
    partial void OnCopiesChanged();
    #endregion
		
		public tbl_Book()
		{
			this._tbl_Borrows = new EntitySet<tbl_Borrow>(new Action<tbl_Borrow>(this.attach_tbl_Borrows), new Action<tbl_Borrow>(this.detach_tbl_Borrows));
			this._tbl_Editions = new EntitySet<tbl_Edition>(new Action<tbl_Edition>(this.attach_tbl_Editions), new Action<tbl_Edition>(this.detach_tbl_Editions));
			this._tbl_Author = default(EntityRef<tbl_Author>);
			this._tbl_Publisher = default(EntityRef<tbl_Publisher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="Int NOT NULL")]
		public int ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublisherID", DbType="Int NOT NULL")]
		public int PublisherID
		{
			get
			{
				return this._PublisherID;
			}
			set
			{
				if ((this._PublisherID != value))
				{
					if (this._tbl_Publisher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPublisherIDChanging(value);
					this.SendPropertyChanging();
					this._PublisherID = value;
					this.SendPropertyChanged("PublisherID");
					this.OnPublisherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int NOT NULL")]
		public int AuthorID
		{
			get
			{
				return this._AuthorID;
			}
			set
			{
				if ((this._AuthorID != value))
				{
					if (this._tbl_Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorID = value;
					this.SendPropertyChanged("AuthorID");
					this.OnAuthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Genre
		{
			get
			{
				return this._Genre;
			}
			set
			{
				if ((this._Genre != value))
				{
					this.OnGenreChanging(value);
					this.SendPropertyChanging();
					this._Genre = value;
					this.SendPropertyChanged("Genre");
					this.OnGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copies", DbType="SmallInt NOT NULL")]
		public short Copies
		{
			get
			{
				return this._Copies;
			}
			set
			{
				if ((this._Copies != value))
				{
					this.OnCopiesChanging(value);
					this.SendPropertyChanging();
					this._Copies = value;
					this.SendPropertyChanged("Copies");
					this.OnCopiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Book_tbl_Borrow", Storage="_tbl_Borrows", ThisKey="ID", OtherKey="BookID")]
		public EntitySet<tbl_Borrow> tbl_Borrows
		{
			get
			{
				return this._tbl_Borrows;
			}
			set
			{
				this._tbl_Borrows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Book_tbl_Edition", Storage="_tbl_Editions", ThisKey="ID", OtherKey="BookID")]
		public EntitySet<tbl_Edition> tbl_Editions
		{
			get
			{
				return this._tbl_Editions;
			}
			set
			{
				this._tbl_Editions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Author_tbl_Book", Storage="_tbl_Author", ThisKey="AuthorID", OtherKey="ID", IsForeignKey=true)]
		public tbl_Author tbl_Author
		{
			get
			{
				return this._tbl_Author.Entity;
			}
			set
			{
				tbl_Author previousValue = this._tbl_Author.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Author.Entity = null;
						previousValue.tbl_Books.Remove(this);
					}
					this._tbl_Author.Entity = value;
					if ((value != null))
					{
						value.tbl_Books.Add(this);
						this._AuthorID = value.ID;
					}
					else
					{
						this._AuthorID = default(int);
					}
					this.SendPropertyChanged("tbl_Author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Publisher_tbl_Book", Storage="_tbl_Publisher", ThisKey="PublisherID", OtherKey="ID", IsForeignKey=true)]
		public tbl_Publisher tbl_Publisher
		{
			get
			{
				return this._tbl_Publisher.Entity;
			}
			set
			{
				tbl_Publisher previousValue = this._tbl_Publisher.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Publisher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Publisher.Entity = null;
						previousValue.tbl_Books.Remove(this);
					}
					this._tbl_Publisher.Entity = value;
					if ((value != null))
					{
						value.tbl_Books.Add(this);
						this._PublisherID = value.ID;
					}
					else
					{
						this._PublisherID = default(int);
					}
					this.SendPropertyChanged("tbl_Publisher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Borrows(tbl_Borrow entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Book = this;
		}
		
		private void detach_tbl_Borrows(tbl_Borrow entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Book = null;
		}
		
		private void attach_tbl_Editions(tbl_Edition entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Book = this;
		}
		
		private void detach_tbl_Editions(tbl_Edition entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Borrow")]
	public partial class tbl_Borrow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _BookID;
		
		private System.DateTime _Date;
		
		private EntityRef<tbl_Book> _tbl_Book;
		
		private EntityRef<tbl_User> _tbl_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnBookIDChanging(int value);
    partial void OnBookIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public tbl_Borrow()
		{
			this._tbl_Book = default(EntityRef<tbl_Book>);
			this._tbl_User = default(EntityRef<tbl_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tbl_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					if (this._tbl_Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Book_tbl_Borrow", Storage="_tbl_Book", ThisKey="BookID", OtherKey="ID", IsForeignKey=true)]
		public tbl_Book tbl_Book
		{
			get
			{
				return this._tbl_Book.Entity;
			}
			set
			{
				tbl_Book previousValue = this._tbl_Book.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Book.Entity = null;
						previousValue.tbl_Borrows.Remove(this);
					}
					this._tbl_Book.Entity = value;
					if ((value != null))
					{
						value.tbl_Borrows.Add(this);
						this._BookID = value.ID;
					}
					else
					{
						this._BookID = default(int);
					}
					this.SendPropertyChanged("tbl_Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Borrow", Storage="_tbl_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public tbl_User tbl_User
		{
			get
			{
				return this._tbl_User.Entity;
			}
			set
			{
				tbl_User previousValue = this._tbl_User.Entity;
				if (((previousValue != value) 
							|| (this._tbl_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_User.Entity = null;
						previousValue.tbl_Borrows.Remove(this);
					}
					this._tbl_User.Entity = value;
					if ((value != null))
					{
						value.tbl_Borrows.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("tbl_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Edition")]
	public partial class tbl_Edition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pages;
		
		private string _Version;
		
		private int _BookID;
		
		private EntityRef<tbl_Book> _tbl_Book;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPagesChanging(int value);
    partial void OnPagesChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnBookIDChanging(int value);
    partial void OnBookIDChanged();
    #endregion
		
		public tbl_Edition()
		{
			this._tbl_Book = default(EntityRef<tbl_Book>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pages", DbType="Int NOT NULL")]
		public int Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				if ((this._Pages != value))
				{
					this.OnPagesChanging(value);
					this.SendPropertyChanging();
					this._Pages = value;
					this.SendPropertyChanged("Pages");
					this.OnPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					if (this._tbl_Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Book_tbl_Edition", Storage="_tbl_Book", ThisKey="BookID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Book tbl_Book
		{
			get
			{
				return this._tbl_Book.Entity;
			}
			set
			{
				tbl_Book previousValue = this._tbl_Book.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Book.Entity = null;
						previousValue.tbl_Editions.Remove(this);
					}
					this._tbl_Book.Entity = value;
					if ((value != null))
					{
						value.tbl_Editions.Add(this);
						this._BookID = value.ID;
					}
					else
					{
						this._BookID = default(int);
					}
					this.SendPropertyChanged("tbl_Book");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Publisher")]
	public partial class tbl_Publisher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Address;
		
		private EntitySet<tbl_Book> _tbl_Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public tbl_Publisher()
		{
			this._tbl_Books = new EntitySet<tbl_Book>(new Action<tbl_Book>(this.attach_tbl_Books), new Action<tbl_Book>(this.detach_tbl_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(45)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Publisher_tbl_Book", Storage="_tbl_Books", ThisKey="ID", OtherKey="PublisherID")]
		public EntitySet<tbl_Book> tbl_Books
		{
			get
			{
				return this._tbl_Books;
			}
			set
			{
				this._tbl_Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Books(tbl_Book entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Publisher = this;
		}
		
		private void detach_tbl_Books(tbl_Book entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Publisher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Student")]
	public partial class tbl_Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _University;
		
		private string _University_ID;
		
		private System.Nullable<double> _GPA;
		
		private int _User_ID;
		
		private EntityRef<tbl_User> _tbl_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniversityChanging(string value);
    partial void OnUniversityChanged();
    partial void OnUniversity_IDChanging(string value);
    partial void OnUniversity_IDChanged();
    partial void OnGPAChanging(System.Nullable<double> value);
    partial void OnGPAChanged();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    #endregion
		
		public tbl_Student()
		{
			this._tbl_User = default(EntityRef<tbl_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University", DbType="VarChar(40)")]
		public string University
		{
			get
			{
				return this._University;
			}
			set
			{
				if ((this._University != value))
				{
					this.OnUniversityChanging(value);
					this.SendPropertyChanging();
					this._University = value;
					this.SendPropertyChanged("University");
					this.OnUniversityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University_ID", DbType="VarChar(30)")]
		public string University_ID
		{
			get
			{
				return this._University_ID;
			}
			set
			{
				if ((this._University_ID != value))
				{
					this.OnUniversity_IDChanging(value);
					this.SendPropertyChanging();
					this._University_ID = value;
					this.SendPropertyChanged("University_ID");
					this.OnUniversity_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPA", DbType="Float")]
		public System.Nullable<double> GPA
		{
			get
			{
				return this._GPA;
			}
			set
			{
				if ((this._GPA != value))
				{
					this.OnGPAChanging(value);
					this.SendPropertyChanging();
					this._GPA = value;
					this.SendPropertyChanged("GPA");
					this.OnGPAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._tbl_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Student", Storage="_tbl_User", ThisKey="User_ID", OtherKey="ID", IsForeignKey=true)]
		public tbl_User tbl_User
		{
			get
			{
				return this._tbl_User.Entity;
			}
			set
			{
				tbl_User previousValue = this._tbl_User.Entity;
				if (((previousValue != value) 
							|| (this._tbl_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_User.Entity = null;
						previousValue.tbl_Student = null;
					}
					this._tbl_User.Entity = value;
					if ((value != null))
					{
						value.tbl_Student = this;
						this._User_ID = value.ID;
					}
					else
					{
						this._User_ID = default(int);
					}
					this.SendPropertyChanged("tbl_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
